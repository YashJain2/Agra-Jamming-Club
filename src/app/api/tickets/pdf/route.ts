import { NextRequest, NextResponse } from 'next/server';
import { prisma } from '@/lib/prisma';
import { getServerSession } from 'next-auth';
import { authOptions } from '@/lib/auth';
import jsPDF from 'jspdf';

export const runtime = 'nodejs';

export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url);
    const ticketId = searchParams.get('ticketId');
    
    if (!ticketId) {
      return NextResponse.json(
        { error: 'Ticket ID is required' },
        { status: 400 }
      );
    }

    // Get ticket with event and user details
    const ticket = await prisma.ticket.findUnique({
      where: { id: ticketId },
      include: {
        event: true,
        user: true,
      },
    });

    if (!ticket) {
      return NextResponse.json(
        { error: 'Ticket not found' },
        { status: 404 }
      );
    }

    // Check if user has access to this ticket
    const session = await getServerSession(authOptions);
    
    // Allow access if:
    // 1. User is signed in and owns the ticket
    // 2. User is admin/moderator
    // 3. This is a guest ticket (no session required for guest tickets)
    const hasAccess = 
      (session && (ticket.userId === session.user.id || ['SUPER_ADMIN', 'ADMIN', 'MODERATOR'].includes(session.user.role))) ||
      (!session && !ticket.user.password); // Guest ticket (no password means guest)

    if (!hasAccess) {
      return NextResponse.json(
        { error: 'Access denied' },
        { status: 403 }
      );
    }

    // Generate PDF
    const pdf = generateTicketPDF(ticket);
    
    // Return PDF as response
    return new NextResponse(pdf, {
      headers: {
        'Content-Type': 'application/pdf',
        'Content-Disposition': `attachment; filename="ticket-${ticketId}.pdf"`,
        'Cache-Control': 'no-cache',
      },
    });

  } catch (error) {
    console.error('PDF generation error:', error);
    return NextResponse.json(
      { error: 'Failed to generate PDF', details: (error as Error).message },
      { status: 500 }
    );
  }
}

function generateTicketPDF(ticket: any) {
  const doc = new jsPDF();
  
  // Set up colors
  const primaryColor = '#ec4899'; // Pink
  const secondaryColor = '#6b7280'; // Gray
  const accentColor = '#f59e0b'; // Amber
  
  // Add header
  doc.setFillColor(primaryColor);
  doc.rect(0, 0, 210, 30, 'F');
  
  // Logo/Title
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(20);
  doc.setFont('helvetica', 'bold');
  doc.text('Agra Jamming Club', 20, 20);
  
  // Ticket title
  doc.setTextColor(0, 0, 0);
  doc.setFontSize(16);
  doc.setFont('helvetica', 'bold');
  doc.text('EVENT TICKET', 20, 50);
  
  // Add decorative line
  doc.setDrawColor(primaryColor);
  doc.setLineWidth(2);
  doc.line(20, 55, 190, 55);
  
  // Event details section
  doc.setFontSize(12);
  doc.setFont('helvetica', 'bold');
  doc.text('Event Details:', 20, 70);
  
  doc.setFont('helvetica', 'normal');
  doc.text(`Event: ${ticket.event.title}`, 20, 80);
  doc.text(`Date: ${new Date(ticket.event.date).toLocaleDateString('en-IN', {
    weekday: 'long',
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  })}`, 20, 90);
  doc.text(`Time: ${ticket.event.time}`, 20, 100);
  doc.text(`Venue: ${ticket.event.venue}`, 20, 110);
  doc.text(`Address: ${ticket.event.address}`, 20, 120);
  
  // Customer details section
  doc.setFont('helvetica', 'bold');
  doc.text('Customer Details:', 20, 140);
  
  doc.setFont('helvetica', 'normal');
  doc.text(`Name: ${ticket.user.name}`, 20, 150);
  doc.text(`Email: ${ticket.user.email}`, 20, 160);
  doc.text(`Phone: ${ticket.user.phone || 'N/A'}`, 20, 170);
  
  // Ticket details section
  doc.setFont('helvetica', 'bold');
  doc.text('Ticket Details:', 20, 190);
  
  doc.setFont('helvetica', 'normal');
  doc.text(`Ticket ID: ${ticket.id}`, 20, 200);
  doc.text(`Quantity: ${ticket.quantity}`, 20, 210);
  doc.text(`Total Price: â‚¹${ticket.totalPrice}`, 20, 220);
  doc.text(`Status: ${ticket.status}`, 20, 230);
  doc.text(`Purchase Date: ${new Date(ticket.createdAt).toLocaleDateString('en-IN')}`, 20, 240);
  
  // QR Code placeholder (you can add actual QR code generation here)
  doc.setFillColor(240, 240, 240);
  doc.rect(120, 70, 60, 60, 'F');
  doc.setTextColor(100, 100, 100);
  doc.setFontSize(10);
  doc.text('QR Code', 140, 105, { align: 'center' });
  
  // Footer
  doc.setFillColor(secondaryColor);
  doc.rect(0, 270, 210, 30, 'F');
  
  doc.setTextColor(255, 255, 255);
  doc.setFontSize(10);
  doc.text('Important: Please bring this ticket and a valid ID to the event.', 20, 285);
  
  // Add watermark
  doc.setTextColor(200, 200, 200);
  doc.setFontSize(8);
  doc.text('Generated by Agra Jamming Club', 20, 295);
  
  return doc.output('blob');
}
